diff -Naur ./Libraries/CMSIS/CM3/CoreSupport/core_cm3.c ../../stm32lib_patched/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c
--- ./Libraries/CMSIS/CM3/CoreSupport/core_cm3.c	2010-06-07 03:25:02.000000000 -0700
+++ ../../stm32lib_patched/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c	2021-02-18 12:39:29.344688563 -0800
@@ -720,39 +720,39 @@
    return(result);
 }
 
-/**
- * @brief  STR Exclusive (8 bit)
- *
- * @param  value  value to store
- * @param  *addr  address pointer
- * @return        successful / failed
- *
- * Exclusive STR command for 8 bit values
- */
-uint32_t __STREXB(uint8_t value, uint8_t *addr)
-{
-   uint32_t result=0;
-  
-   __ASM volatile ("strexb %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
-   return(result);
-}
-
-/**
- * @brief  STR Exclusive (16 bit)
- *
- * @param  value  value to store
- * @param  *addr  address pointer
- * @return        successful / failed
- *
- * Exclusive STR command for 16 bit values
- */
-uint32_t __STREXH(uint16_t value, uint16_t *addr)
-{
-   uint32_t result=0;
-  
-   __ASM volatile ("strexh %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
-   return(result);
-}
+///**
+// * @brief  STR Exclusive (8 bit)
+// *
+// * @param  value  value to store
+// * @param  *addr  address pointer
+// * @return        successful / failed
+// *
+// * Exclusive STR command for 8 bit values
+// */
+//uint32_t __STREXB(uint8_t value, uint8_t *addr)
+//{
+//   uint32_t result=0;
+//  
+//   __ASM volatile ("strexb %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
+//   return(result);
+//}
+//
+///**
+// * @brief  STR Exclusive (16 bit)
+// *
+// * @param  value  value to store
+// * @param  *addr  address pointer
+// * @return        successful / failed
+// *
+// * Exclusive STR command for 16 bit values
+// */
+//uint32_t __STREXH(uint16_t value, uint16_t *addr)
+//{
+//   uint32_t result=0;
+//  
+//   __ASM volatile ("strexh %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
+//   return(result);
+//}
 
 /**
  * @brief  STR Exclusive (32 bit)
